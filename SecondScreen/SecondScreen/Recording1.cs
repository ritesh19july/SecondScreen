///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SecondScreen
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Recording1 recording.
    /// </summary>
    [TestModule("36757159-82ec-460b-a847-34b6fb504213", ModuleType.Recording, 1)]
    public partial class Recording1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SecondScreenRepository repository.
        /// </summary>
        public static SecondScreenRepository repo = SecondScreenRepository.Instance;

        static Recording1 instance = new Recording1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Recording1()
        {
            varURL = "http://qa.wwe-app.cloud6.wwe.com/admin/structure/taxonomy/shows";
            varBrowser = "Chrome";
            varShowsName = "NewTest";
            varExternalId = "11";
            varDuration = "00";
            varDurationMin = "02";
            varDurationSec = "02";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Recording1 Instance
        {
            get { return instance; }
        }

#region Variables

        string _varBrowser;

        /// <summary>
        /// Gets or sets the value of variable varBrowser.
        /// </summary>
        [TestVariable("bd823a48-d109-46d7-88f3-deb57073fc84")]
        public string varBrowser
        {
            get { return _varBrowser; }
            set { _varBrowser = value; }
        }

        string _varShowsName;

        /// <summary>
        /// Gets or sets the value of variable varShowsName.
        /// </summary>
        [TestVariable("b13fab41-b75a-479c-9ba1-da270793b6c2")]
        public string varShowsName
        {
            get { return _varShowsName; }
            set { _varShowsName = value; }
        }

        string _varExternalId;

        /// <summary>
        /// Gets or sets the value of variable varExternalId.
        /// </summary>
        [TestVariable("f5efb83a-e81e-4a85-904f-ae833513a58b")]
        public string varExternalId
        {
            get { return _varExternalId; }
            set { _varExternalId = value; }
        }

        string _varDuration;

        /// <summary>
        /// Gets or sets the value of variable varDuration.
        /// </summary>
        [TestVariable("7a73d766-1257-4d97-a4b1-dc95efc8b608")]
        public string varDuration
        {
            get { return _varDuration; }
            set { _varDuration = value; }
        }

        string _varDurationMin;

        /// <summary>
        /// Gets or sets the value of variable varDurationMin.
        /// </summary>
        [TestVariable("31df2721-d12b-4144-a8ec-ba8f9343cb27")]
        public string varDurationMin
        {
            get { return _varDurationMin; }
            set { _varDurationMin = value; }
        }

        string _varDurationSec;

        /// <summary>
        /// Gets or sets the value of variable varDurationSec.
        /// </summary>
        [TestVariable("3f573076-0966-4d18-a952-43206a92c6c7")]
        public string varDurationSec
        {
            get { return _varDurationSec; }
            set { _varDurationSec = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varURL.
        /// </summary>
        [TestVariable("303bc74b-f01a-4ba0-b1ba-30382b5005c0")]
        public string varURL
        {
            get { return repo.varURL; }
            set { repo.varURL = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.3.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.3.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            Recording1_Open_Browser1();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 40s.", new RecordItemIndex(1));
            Delay.Duration(40000, false);
            
            Mouse_Click_AddTerm1();
            Delay.Milliseconds(0);
            
            Mouse_Click_EditName1();
            Delay.Milliseconds(0);
            
            Key_Sequence_EditName1();
            Delay.Milliseconds(0);
            
            Mouse_DoubleClick_EditFieldExternalIdUnd0Value1();
            Delay.Milliseconds(0);
            
            Key_Sequence_EditFieldExternalIdUnd0Value1();
            Delay.Milliseconds(0);
            
            Mouse_Down_ShowsWWE1();
            Delay.Milliseconds(0);
            
            Mouse_Up_ShowsWWE1();
            Delay.Milliseconds(0);
            
            Mouse_Click_EditFieldDurationUnd0Value1();
            Delay.Milliseconds(0);
            
            Key_Sequence_EditFieldDurationUnd0Value3();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(11));
            Delay.Duration(500, false);
            
            Key_Sequence();
            Delay.Milliseconds(0);
            
            Mouse_Click_Relations1();
            Delay.Milliseconds(0);
            
            Mouse_DoubleClick_EditParent3();
            Delay.Milliseconds(0);
            
            Mouse_Click_EditParent1();
            Delay.Milliseconds(0);
            
            Mouse_Click_EditSubmit1();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1000ms.", new RecordItemIndex(17));
            Delay.Duration(1000, false);
            
            Validate_DivTagCreatedNewTerm1();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1000ms.", new RecordItemIndex(19));
            Delay.Duration(1000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
